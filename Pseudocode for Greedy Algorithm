# Input: graph - a graph represented as an adjacency list or adjacency matrix
# Output: a dictionary mapping each node to a color

    colors = {}  # Dictionary to store the color assigned to each node

    # Iterate through nodes in the graph in their natural order
    for node in graph.nodes:
        # Get the colors used by neighbors
        neighbor_colors = set(colors[neighbor] for neighbor in graph.neighbors(node) if neighbor in colors)

        # Assign the smallest available color
        for color in range(len(graph)):
            if color not in neighbor_colors:
                colors[node] = color
                break

    return colors
